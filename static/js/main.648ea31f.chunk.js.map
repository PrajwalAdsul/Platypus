{"version":3,"sources":["components/Logout.js","components/Header.js","components/PlatyTerminal/PlatyTerminal.js","components/PlatyTerminal/PlatyRun.js","components/PieChart.js","components/PlatyShare/SendFilePlatyShare.js","components/PlatyShare/GetFilePlatyShare.js","components/PlatyShare/PlatyShare.js","components/PlatyDetect/PlatyDetect.js","components/PlatyConsole/CPU/PieChart.js","components/PlatyConsole/Header.js","components/PlatyConsole/CPU/LogicalCores.js","components/PlatyConsole/CPU/PhysicalCores.js","components/SHeader.js","components/PlatyConsole/CPU/CPU.js","components/PlatyConsole/Network/PHeader.js","components/PlatyConsole/Network/AddressFamilies.js","components/PlatyConsole/Network/AllNICs.js","components/PlatyConsole/Network/AddressForAllInterfaces.js","components/PlatyConsole/Network/Gateways.js","components/PlatyConsole/Network/Network.js","components/PlatyConsole/Process/AllProcess.js","components/PlatyConsole/Process/AllProcessMemory.js","components/PlatyConsole/Process/Process.js","components/PlatyConsole/PlatyConsole.js","components/PlatyReal/PlatyReal.js","components/PlatyConsole/Disk/Space.js","components/PlatyConsole/Disk/Partitions.js","components/PlatyConsole/Disk/Disk.js","components/PlatyConsole/Memory/Memory.js","components/PlatyConsole/Disk/DiskIOCounters.js","components/Login.js","components/App.js","index.js"],"names":["Logout","Component","constructor","props","super","this","onSubmit","bind","e","localStorage","setItem","clear","render","Link","to","className","onClick","Header","state","href","PlatyTerminal","getItem","Redirect","push","style","display","justifyContent","alignItems","height","commandPassThrough","cmd","print","data","join","path","axios","post","then","response","catch","err","console","log","filename","replace","url","window","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","PlatyRun","React","StartProgram","a","preventDefault","programname","setState","startpoutput","StartProgramAfterTime","programnameforaftertime","atime","starttime","startpatoutput","StartProgramAtTime","programnameforattime","attime","startattimeoutput","checkprocess","processname","processnameforcheck","checkoutput","sendsignal","processnameforsignal","signal","pid","pid_s","signaloutput","downloadEmployeeData","processnameforterminate","pid_t","output","shutdownnow","sdnow","shutdownaftergivenmin","mins","shutdownaftermin","sdaftermin","shutdownattime","gtime","sdattime","shutdowncancel","cancelval","restartsystem","restartsys","rebootsystem","rebootsys","suspendsystem","suspendsys","hibernatesystem","hibernatesys","screenlocksystem","screenlocksys","logoutsystem","logoutsys","isDialogOpen","poweroutput","handleChange","target","value","name","id","type","onChange","SendFilePlatyShare","fileUpload","file","formData","FormData","append","headers","error","onFormSubmit","files","DownloadFile","handleOnChangeFileName","handleOnChangePath","PlatyShare","GetFilePlatyShare","SList","PlatyDetect","componentDidMount","get","malwareList","map","i","key","PieChart","colorScale","x","y","user","nice","system","idle","iowait","irq","softirq","steat","guest","guest_nice","LogicalCores","logicalCores","PhysicalCores","CPU","physicalCores","cpuTimes","cpuPercent","pguest","pguest_nice","pidle","piowait","pirq","pnice","psoftirq","psteat","psystem","puser","dat","idlt","PHeader","AddressFamilies","AllNICs","allNICs","troublesListf","interface","address","u","AddressForAllInterfaces","interfaces","addrs","troublesListf1","addressFamily","ip","Gateways","marginTop","Network","username","vms","AllProcesses","allProcesses","Process","PlatyReal","devices","alert","devicesList","acpiList","total","used","free","percent","Space","location","device","pathname","mountpoint","fstype","opts","Partitions","sin","sout","Memory","read_count","write_count","read_bytes","write_bytes","read_time","write_time","read_merged_count","write_merged_count","busy_time","DiskIOCounters","UserSignIn","user_name","password","secret_key","status","loginSuccess","errorMessage","event","componentWillMount","handleSubmit","htmlFor","placeholder","App","Switch","Route","exact","component","PlatyConsole","Disk","Login","from","rel","integrity","crossOrigin","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.648ea31f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch, Link, withRouter} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Message from '../elements/Message';\nimport Error from '../elements/Error';\nimport { COMMON_FIELDS, REGISTRATION_FIELDS, LOGIN_FIELDS, LOGIN_MESSAGE, ERROR_IN_LOGIN } from '../MessageBundle';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button'\n \nexport default class Logout extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\tasync onSubmit(e) {\n\t\tawait localStorage.setItem('user_name', \"\");\n\t\tawait localStorage.setItem('password', \"\");\n\t\tawait localStorage.setItem('secret_key', \"\");\n\t\tawait localStorage.setItem('session', \"end\");\n\t\tawait localStorage.clear();\n\t}\n\trender() {\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Link to=\"/Login\" className='nav-item nav-link' onClick={this.onSubmit} >Logout</Link>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n}\n\t\t\t","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport Error from '../elements/Error';\r\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\r\nimport axios from 'axios';\r\nimport Logout from './Logout';\r\nexport default class Header extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<nav className='navbar navbar-expand-lg navbar-light header'>\r\n\t\t\t<a className=\"navbar-brand\" href=\"#\">\r\n            <h1><b>PlatyPus</b></h1>\r\n          \t</a>\r\n          \t<h2>\r\n          \t<div className=\"nav navbar-nav ml-auto\">\r\n          \t<Link to=\"/PlatyTerminal\" className='nav-item nav-link'>Terminal</Link>\r\n          \t<Link to=\"/PlatyRun\" className='nav-item nav-link'>PlatyRun</Link>\r\n            <Link to=\"/PlatyShare\" className='nav-item nav-link'>PlatyShare</Link>\r\n            <Link to=\"/PlatyConsole\" className='nav-item nav-link'>PlatyConsole</Link>\t\r\n            <Link to=\"/PlatyDetect\" className='nav-item nav-link'>PlatyDetect</Link>\t\r\n            <Link to=\"/PlatyReal\" className='nav-item nav-link'>PlatyReal</Link>\t\r\n    \t\t<Logout />\r\n            </div>\r\n\t\t\t</h2>\r\n\t\t\t</nav>\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Terminal from 'terminal-in-react';\nimport Header from '../Header';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nexport default class PlatyTerminal extends Component {\n\trender() {\n\t if(localStorage.getItem('session') != \"start\"){\n        return <Redirect push to = \"/Login\" />;\n      }\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Header/>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t          display: \"flex\",\n\t\t          justifyContent: \"center\",\n\t\t          alignItems: \"center\",\n\t\t          height: \"100vh\"\n\t\t        }}\n\t\t\t>\n\t\t\t\t<Terminal\n\t\t\t\t  commandPassThrough={(cmd, print) => {\n\t\t\t\t    const data = {\n\t\t\t\t    \t'command' : cmd.join(\" \")\n\t\t\t\t    };\n\t\t\t\t    if(cmd[0] == \"path\"){\n\t\t\t\t    \tconst data = {'command' : 'pwd'}\n\t\t\t\t    \tvar path = '';\n\t\t\t\t    \taxios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'shell', data)\n\t\t\t\t\t\t.then(response => {\n\t\t\t\t\t\t\t// print(response.data.join('\\n'));\n\t\t\t\t\t\t\tpath += response.data.join(',') + '/';\n\t\t\t\t\t\t\t// console.log(path);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tconsole.log(err.response);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst filename = {'command' : 'ls ' + cmd[1]}\n\t\t\t\t\t\taxios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'shell', filename)\n\t\t\t\t\t\t.then(response => {\n\t\t\t\t\t\t\t// print(response.data.join('\\n'));\n\t\t\t\t\t\t\tpath += response.data;\n\t\t\t\t\t\t\t// console.log(path);\n\t\t\t\t\t\t\tpath = path.replace(',', '');\n\t\t\t\t\t\t\tpath = path.replace(',', '');\n\t\t\t\t\t\t\t// path.splice(0, path.length - 1);\n\t\t\t\t\t\t\tprint(path);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tconsole.log(err.response);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(path);\n\t\t\t\t    }\n\t\t\t\t    else if(cmd[0] == 'get'){\n\t\t\t\t    \tconst data = {'path' : cmd[1]};\n\t\t\t\t    \taxios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' +'getFile', data)\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t   const url = window.URL.createObjectURL(new Blob([response.data]));\n\t\t\t\t\t\t   const link = document.createElement('a');\n\t\t\t\t\t\t   link.href = url;\n\t\t\t\t\t\t   link.setAttribute('download', data.filename); //or any other extension\n\t\t\t\t\t\t   document.body.appendChild(link);\n\t\t\t\t\t\t   link.click();\n\t\t\t\t\t\t});\n\t\t\t\t    }\n\t\t\t\t\telse{\n\t\t\t\t\t \taxios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'shell', data)\n\t\t\t\t\t\t.then(response => {\n\t\t\t\t\t\t\tprint(response.data.join('\\n'));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tconsole.log(err.response);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t   }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// import React from 'react';\nimport React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\nimport axios from 'axios';\nimport Header from '../Header';\nimport Dialog from 'react-dialog'\n\n\nclass PlatyRun extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisDialogOpen: false,\n\t\t\tpid_t:'',\n\t\t\tpid_s:'',\n\t\t\tprogramname:'',\n\t\t\tprogramnameforaftertime:'',\n\t\t\tstarttime: '',\n\t\t\tprogramnameforattime:'',\n\t\t\tattime:'',\n\t\t\tprocessnameforterminate:'',\n\t\t\tprocessnameforsignal: '',\n\t\t\tprocessnameforcheck:'',\n\t\t\tsignal:'',\n\t\t\toutput:'',\n\t\t\tsignaloutput:'',\n\t\t\tcheckoutput:'',\n\t\t\tstartpoutput:'',\n\t\t\tstartpatoutput:'',\n\t\t\tstartattimeoutput:'',\n\t\t\t\n\t\t\tpoweroutput:'',\n\t\t\tcancelval:'',\n\t\t\tshutdownaftermin:'',\n\t\t\tshutdownattime:'',\n\n\t\t\tsdnow:'',\n\t\t\tsdaftermin:'',\n\t\t\tsdattime:'',\n\t\t\trestartsys:'',\n\t\t\trebootsys:'',\n\t\t\tsuspendsys:'',\n\t\t\thibernatesys:'',\n\n\t\t\tscreenlocksys:'',\n\t\t\tlogoutsys:'',\n\n\t\t};\n\t\t this.handleChange = this.handleChange.bind(this);\n\n\t}\n\t\n\t  handleChange (e) {\n\tconsole.log(e.target.value)\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n\t\n\t/*handleOnChangeText = e => {\n\t\tconst\n\t\tthis.setState({\n\t\t\t[programename] : value\n\t\t})\n\t}*/\n\t/*handleOnChangeProgramName = e => {\n\t\tthis.setState({\n\t\t\tprogramname: e.target.value\n\t\t});\n\t}\n\n\thandleOnChangePidT = e => {\n\t\tthis.setState({\n\t\t\tpid_t: e.target.value\n\t\t});\n\t}\n\n\thandleOnChangePidS = e => {\n\t\tthis.setState({\n\t\t\tpid_s: e.target.value\n\t\t});\n\t}\n\n\thandleOnChangeSignal = e => {\n\t\tthis.setState({\n\t\t\tsignal : e.target.value\n\t\t});\n\t}\n\thandleOnChangeProcessNameForSignal = e => {\n\t\tthis.setState({\n\t\t\tprocessnameforsignal : e.target.value\n\t\t});\n\t}\n\n\thandleOnChangeProcessNameForTerminate = e => {\n\t\tthis.setState({\n\t\t\tprocessnameforterminate : e.target.value\n\t\t});\n\t}\n\n\thandleOnChangeProcessNameForCheck = e => {\n\t\tthis.setState({\n\t\t\tprocessnameforcheck : e.target.value\n\t\t});\n\t}\n\thandleOnChangeShutdownaftermin = e => {\n\t\tthis.setState({\n\t\t\tshutdownaftermin : e.target.value\n\t\t});\n\t}\n\thandleOnChangeShutdownattime = e => {\n\t\tthis.setState({\n\t\t\tshutdownattime: e.target.value\n\t\t});\n\t}*/\n\n\n\tStartProgram = async e => {\n\t\t\n\t\te.preventDefault();\n\t\tconst data = {\n\t\t\tprogramname : this.state.programname,\n\t\t\t// filename : this.state.filename\n\t\t};\n\t\tconsole.log(data);\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'startprocess', data)\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tstartpoutput: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\t\n\t\n\tStartProgramAfterTime = async e => {\n\t\t\n\t\te.preventDefault();\n\t\tconst data = {\n\t\t\tprogramname : this.state.programnameforaftertime,\n\t\t\tatime : this.state.starttime,\n\t\t};\n\t\tconsole.log(data);\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'startprocessaftermins', data)\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tstartpatoutput: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\t\n\tStartProgramAtTime = async e => {\n\t\t\n\t\te.preventDefault();\n\t\tconst data = {\n\t\t\tprogramname : this.state.programnameforattime,\n\t\t\tattime : this.state.attime,\n\t\t};\n\t\tconsole.log(data);\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'startprocessattime', data)\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tstartattimeoutput : response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\t\n\t\n\n\n\tcheckprocess = async e => {\n\n\t\te.preventDefault();\n\t\tconst data = {\n\t\t\tprocessname : this.state.processnameforcheck,\n\t\t};\n\t\tconsole.log(data);\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'checkprocess', data)\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tcheckoutput: response.data\t\n\t\t})     \n\t\t   /*const url = window.URL.createObjectURL(new Blob([response.data]));\n\t\t   const link = document.createElement('a');\n\t\t   link.href = url;\n\t\t   link.setAttribute('download', data.filename); //or any other extension\n\t\t   document.body.appendChild(link);\n\t\t   link.click();*/\n\t\t});\n\t}\n\t\n\n\tsendsignal = async e => {\n\n\t\te.preventDefault();\n\t\tconst data = {\n\t\t\tprocessname : this.state.processnameforsignal,\n\t\t\tsignal : this.state.signal,\n\t\t\tpid : this.state.pid_s,\n\t\t\t// filename : this.state.filename\n\t\t};\n\t\tconsole.log(data);\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'sendsignal', data)\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\tsignaloutput: response.data\t\n\t\t})     \n\t\t   /*const url = window.URL.createObjectURL(new Blob([response.data]));\n\t\t   const link = document.createElement('a');\n\t\t   link.href = url;\n\t\t   link.setAttribute('download', data.filename); //or any other extension\n\t\t   document.body.appendChild(link);\n\t\t   link.click();*/\n\t\t});\n\t}\n\t\n\n\n\tdownloadEmployeeData = async e => {\n\n\t\te.preventDefault();\n\t\tconst data = {\n\t\t\tprocessname : this.state.processnameforterminate,\n\t\t\tpid : this.state.pid_t,\n\t\t\t// filename : this.state.filename\n\t\t};\n\t\tconsole.log(data);\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'terminateprocess', data)\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\toutput: response.data\t\n\t\t})     \n\t\t   /*const url = window.URL.createObjectURL(new Blob([response.data]));\n\t\t   const link = document.createElement('a');\n\t\t   link.href = url;\n\t\t   link.setAttribute('download', data.filename); //or any other extension\n\t\t   document.body.appendChild(link);\n\t\t   link.click();*/\n\t\t});\n\t}\n\t\n\tshutdownnow = async e => {\n\t\t\t\n\t\tconsole.log('shutdown');\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'shutdownnow')\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tsdnow: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\n\tshutdownaftergivenmin = async e => {\n\t\t\n\t\te.preventDefault();\n\t\tconst data = {\n\t\t\tmins : this.state.shutdownaftermin,\n\t\t\t// filename : this.state.filename\n\t\t};\n\t\tconsole.log('shutdown after min');\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'shutdownaftermin', data)\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tsdaftermin: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\n\tshutdownattime = async e => {\n\t\t\n\t\te.preventDefault();\n\t\tconst data = {\n\t\t\tgtime : this.state.shutdownattime,\n\t\t\t// filename : this.state.filename\n\t\t};\n\t\tconsole.log('shutdown after min');\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'shutdownattime', data)\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tsdattime: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\n\n\tshutdowncancel = async e => {\n\t\n\t\tconsole.log('cancel shutdown');\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'cancelshutdown')\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tcancelval: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\n\trestartsystem = async e => {\n\t\n\t\tconsole.log('restart');\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'restartsystem')\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\trestartsys: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\trebootsystem = async e => {\n\t\n\t\tconsole.log('reboot');\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'rebootsystem')\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\trebootsys: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\n\tsuspendsystem = async e => {\n\t\n\t\tconsole.log('suspend');\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'suspendsystem')\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tsuspendsys: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\n\thibernatesystem = async e => {\n\t\n\t\tconsole.log('hibernate');\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'hibernatesystem')\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\thibernatesys: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\t\n\tscreenlocksystem = async e => {\n\t\n\t\tconsole.log('screen lock');\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'screenlocksystem')\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tscreenlocksys: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\n\tlogoutsystem = async e => {\n\t\n\t\tconsole.log('logout');\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'logoutsystem')\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t\t this.setState({\n\t\t\t\tlogoutsys: response.data\t\n\t\t\t})\n\t\t}) \n\t}\n\n\t\n\n\n\n\n\t\n\t//openDialog = () => this.setState({ isDialogOpen: true })\n \n   // handleClose = () => this.setState({ isDialogOpen: false })\n\n\n\n\trender() {\n\t\t if(localStorage.getItem('session') != \"start\"){\n       \t\t return <Redirect push to = \"/Login\" />;\n    \t  }\n\t\treturn (\n\t\t\t<div id=\"container\">\n\t\t\t\t<Header/>\n\t\t\t\t<center>\n\t\t\t\t<h5>provide either processname or processid</h5>\n\t\t\t\t\n\t\t\t\t<h1>Start processes</h1>\n\t\t\t\t<p>path</p>\n\t\t\t\t<input type=\"text\" value={this.state.programname} name=\"programname\" onChange={this.handleChange}/>\n\t\t\t\t<button onClick={this.StartProgram}>Run</button>\n\t\t\t\t<h4>{this.state.startpoutput}</h4>\n\t\t\t\t<br/><br/><br/>\t\n\n\t\t\t\t<h1>Start processes after secs/mins/hrs/days</h1>\n\t\t\t\t<h6>(suffix the time with m for mins, s for secs , h for hours, d for days)</h6>\n\t\t\t\t<label>Program Name</label>\n\t\t\t\t<input type=\"text\" value={this.state.programnameforaftertime} name=\"programnameforaftertime\" onChange={this.handleChange}/>\n\t\t\t\t<br/>\n\t\t\t\t<label>Time  </label>\n\t\t\t\t<input type=\"text\" value={this.state.starttime} name=\"starttime\" onChange={this.handleChange}/>\n\t\t\t\t<br/>\n\t\t\t\t<button onClick={this.StartProgramAfterTime}>Run</button>\n\t\t\t\t<h4>{this.state.startpatoutput}</h4>\n\t\t\t\t<br/><br/><br/>\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<h1>Start processes at time in (mm/dd/yyyy 24hr format:time) format</h1>\n\t\t\t\t<h6>(give time in 24 hr format)</h6>\n\t\t\t\t<label>Program Name</label>\n\t\t\t\t<input type=\"text\" value={this.state.programnameforattime} name=\"programnameforattime\" onChange={this.handleChange}/><br/>\n\t\t\t\t<label>Date and time</label>\n\t\t\t\t<input type=\"text\" value={this.state.attime} name=\"attime\" onChange={this.handleChange}/><br/>\n\t\t\t\t<button onClick={this.StartProgramAtTime}>Run</button>\n\t\t\t\t<h4>{this.state.startattimeoutput}</h4>\n\t\t\t\t<br/><br/><br/>\t\n\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t<h1>Stop/Terminate processes</h1>\n\t\t\t\t<h3>Process Name</h3>\n\t\t\t\t<input type=\"text\" value={this.state.processnameforterminate} name=\"processnameforterminate\" onChange={this.handleChange}/><br/><br/>\n\t\t\t\t<h3>Process Pid</h3>\n\t\t\t\t<input type=\"text\" value={this.state.pid_t} name=\"pid_t\" onChange={this.handleChange}/><br/><br/>\n\t\t\t\t<button onClick={this.downloadEmployeeData}>Stop or Terminate</button><br/>\n\t\t\t\t<h4>{this.state.output}</h4>\n\t\t\t\t<br/><br/><br/>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<h1>Signal processes</h1>\n\t\t\t\t<h3>Process Name</h3>\n\t\t\t\t<input type=\"text\" value={this.state.processnameforsignal} name=\"processnameforsignal\" onChange={this.handleChange}/><br/><br/>\n\t\t\t\t<h3>Process Pid</h3>\n\t\t\t\t<input type=\"text\" value={this.state.pid_s} name=\"pid_s\" onChange={this.handleChange}/><br/><br/>\n\t\t\t\t<h3>Signal Type</h3>\n\t\t\t\t<input type=\"text\" value={this.state.signal} name=\"signal\" onChange={this.handleChange}/>\t\t\t\n\t\t\t\t<br/><br/>\n\t\t\t\t<button onClick={this.sendsignal}>Send Signal</button>\n\t\t\t\t<h4>{this.state.signaloutput}</h4>\n\t\t\t\t<br/><br/><br/>\n\n\n\t\t\t\t<h1>check if process is running or not</h1>\n\t\t\t\t<h3>Process Name</h3>\n\t\t\t\t<input type=\"text\" value={this.state.processnameforcheck} name=\"processnameforcheck\" onChange={this.handleChange}/><br/><br/>\n\t\t\t\t<button onClick={this.checkprocess}>Check</button>\n\t\t\t\t<h4>{this.state.checkoutput}</h4>\n\t\t\t\t<br/><br/><br/>\n\n\n\t\t\t\t<h1>power options</h1>\n\t\t\t\t<br/>\n\t\t\t\t<button onClick={this.shutdownnow}>shutdown now</button>\n\t\t\t\t<h4>{this.state.sdnow}</h4>\n\t\t\t\t{/*<button type=\"button\" onClick={this.openDialog}>Open Dialog</button>\n                {\n                    this.state.isDialogOpen &&\n                    <Dialog\n                        title=\"Dialog Title\"\n                        modal={true}\n\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\tisDraggable={false}\n\n                        buttons={\n                            [{\n                                text: \"Close\",\n                                onClick: () => this.handleClose()\n                            }]\n                        }>\n                        <h1>Dialog Content</h1>\n                        <p>More Content. Anything goes here</p>\n                    </Dialog>\n                }*/}\n\n\n\t\t\t\t<input type=\"text\" value={this.state.shutdownaftermin} name=\"shutdownaftermin\" onChange={this.handleChange}/>\n\t\t\t\t<button onClick={this.shutdownaftergivenmin}>shutdown after mins</button>\n\t\t\t\t<h4>{this.state.sdaftermin}</h4>\n\t\t\t\t{/*<button onClick={this.shutdowncancel}>cancel the shutdown</button>\n\t\t\t\t<h4>{this.state.cancelval}</h4>*/}\n\n\t\t\t\t<h5>Give time in 24-hour format when you want to shutdown your pc</h5>\n\t\t\t\t<input type=\"text\" value={this.state.shutdownattime} name=\"shutdownattime\" onChange={this.handleChange}/>\n\t\t\t\t<button onClick={this.shutdownattime}>shutdown at given time</button>\n\t\t\t\t<h4>{this.state.sdattime}</h4>\n\n\t\t\t\t<button onClick={this.shutdowncancel}>cancel the shutdown</button>\n\t\t\t\t<h4>{this.state.cancelval}</h4>\n\n\n\t\t\t\t<button onClick={this.restartsystem}>restart system</button>\n\t\t\t\t<h4>{this.state.restartsys}</h4>\n\n\t\t\t\t<button onClick={this.rebootsystem}>reboot system</button>\n\t\t\t\t<h4>{this.state.rebootsys}</h4>\n\n\t\t\t\t<button onClick={this.suspendsystem}>suspend system</button>\n\t\t\t\t<h4>{this.state.suspendsys}</h4>\n\n\t\t\t\t<button onClick={this.hibernatesystem}>place system in hibernate mode</button>\n\t\t\t\t<h4>{this.state.hibernatesys}</h4>\n\n\t\t\t\t\n\t\t\t\t<button onClick={this.screenlocksystem}>lock the screen</button>\n\t\t\t\t<h4>{this.state.screenlocksys}</h4>\n\t\n\t\t\t\t<button onClick={this.logoutsystem}>logout</button>\n\t\t\t\t<h4>{this.state.logoutsys}</h4>\n\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default PlatyRun;\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { VictoryPie } from \"victory\";\n\nexport default class PieChart extends Component {\n  constructor(props){\n  \tsuper(props);\n  }\n  render() {\n    return <VictoryPie   colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\" ]}\n     data={[\n    { x: \"user\", y: this.props.user },\n    { x: \"nice\", y: this.props.nice },\n    { x: \"system\", y: this.props.system },\n    { x: \"idle\", y: this.props.idle},\n    { x: \"iowait\", y: this.props.iowait },\n    { x: \"irq\", y: this.props.irq },\n    { x: \"softirq\", y: this.props.softirq },\n    { x: \"steat\", y: this.props.steat},\n    { x: \"guest\", y: this.props.guest },\n    { x: \"guest_nice\", y: this.props.guest_nice},\n  ]}/>;\n  }\n}","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\nimport axios from 'axios';\n\nexport default class SendFilePlatyShare extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      file:null\n    }\n    this.onFormSubmit = this.onFormSubmit.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.fileUpload = this.fileUpload.bind(this)\n  }\n  onFormSubmit(e){\n    e.preventDefault() // Stop form submit\n    this.fileUpload(this.state.file).then((response)=>{\n      // console.log(response.data);\n    })\n  }\n  onChange(e) {\n    this.setState({file:e.target.files[0]})\n  }\n\n\n  fileUpload = async file => {\n  \tconst formData = new FormData();\n  \tformData.append('file',file)\n    await axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'putFile', formData, {\n  \t    headers: {\n  \t      'Content-Type': 'multipart/form-data'\n  \t    }\n  \t}).then(response => {\n  \t\t\tconsole.log(response);\n  \t})\n  \t.catch(error => {\n  \t\tconsole.log(error.response);\n  \t});\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<center>\n\t\t\t\t<br/> <br/> <br/> <br/>\n\t\t\t\t<h2>Send File</h2>\n\t\t\t     <form onSubmit={this.onFormSubmit}>\n\t\t\t        <input type=\"file\" onChange={this.onChange} />\n\t\t\t        <button type=\"submit\">Upload</button>\n\t\t\t     </form>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","// import React from 'react';\nimport React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\nimport axios from 'axios';\nclass DownloadFile extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfilename : '',\n\t\t\tpath : ''\n\t\t};\n\t}\n\t\n\thandleOnChangeFileName = e => {\n\t\tthis.setState({\n\t\t\tfilename : e.target.value\n\t\t});\n\t}\n\n\thandleOnChangePath = e => {\n\t\tthis.setState({\n\t\t\tpath : e.target.value\n\t\t});\n\t}\n\n\tdownloadEmployeeData = async e => {\n\n\t\te.preventDefault();\n\t\tconst data = {\n\t\t\tpath : this.state.path,\n\t\t\t// filename : this.state.filename\n\t\t};\n\t\tconsole.log(data);\n\t\tawait axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'getFile', data)\n\t\t.then((response) => {\n\t\t   const url = window.URL.createObjectURL(new Blob([response.data]));\n\t\t   const link = document.createElement('a');\n\t\t   link.href = url;\n\t\t   link.setAttribute('download', data.filename); //or any other extension\n\t\t   document.body.appendChild(link);\n\t\t   link.click();\n\t\t});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"container\">\n\t\t\t\t<h1>Download File using React App</h1>\n\t\t\t\t<p>path</p>\n\t\t\t\t<input type=\"text\" value={this.state.path} name=\"path\" onChange={this.handleOnChangePath}/>\n\t\t\t\t<button onClick={this.downloadEmployeeData}>Download</button>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default DownloadFile;","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\nimport axios from 'axios';\nimport SendFilePlatyShare from './SendFilePlatyShare';\nimport GetFilePlatyShare from './GetFilePlatyShare';\nimport PlatyTerminal from '../PlatyTerminal/PlatyTerminal';\nimport Header from '../Header';\n\nexport default class PlatyShare extends Component {\n\trender() {\n\t if(localStorage.getItem('session') != \"start\"){\n        return <Redirect push to = \"/Login\" />;\n      }\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header/>\n\t\t\t\t<center><h1>Platy Share</h1></center>\n\t\t\t\t<SendFilePlatyShare />\n\t\t\t\t<GetFilePlatyShare />\n\t\t\t\t<PlatyTerminal/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\nimport axios from 'axios';\nimport Header from '../Header';\nconst SList = props => (\n    <tr>\n        <td><center>{props.data}</center></td>\n    </tr>\n)\n\n\n\nexport default class PlatyDetect extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n     data: [] \n    }\n  }\n\n  onSubmit = async e => {\n\n    e.preventDefault();\n    const data = {\n   \t\n    };\n   \n  }\n\n   componentDidMount() {\n        axios.get('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'malwaredetection')\n            .then(response => {\n                this.setState({\n                    data : response.data\n                });\n\n                console.log(response.data)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n}\n    malwareList() {\n        return this.state.data.map(function(data, i) {\n            return <SList data = {data} key={i} />;\n        })\n    }\n\n\n\n\trender() {\n     if(localStorage.getItem('session') != \"start\"){\n        return <Redirect push to = \"/Login\" />;\n      }\n\t\treturn (\n\t\t\t<div>\n      <Header/>\n\t\t\t\t<center>\n\t\t\t\t<br/> <br/> <br/> <br/>\n\t\t\t\t<h2>PlatyDetect</h2>\n  \t      <form onSubmit = {this.onSubmit}>\n            <button type=\"submit\" className=\"btn btn-primary\">Run Malware Detection</button>\n          </form>\n\t\t\t                <h3> Output : {this.malwareList()}   </h3>\t\n    \t\t\t</center>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { VictoryPie } from \"victory\";\n\nexport default class PieChart extends Component {\n  constructor(props){\n  \tsuper(props);\n  }\n  render() {\n    return <VictoryPie   colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\" ]}\n     data={[\n    { x: \"user\", y: this.props.user },\n    { x: \"nice\", y: this.props.nice },\n    { x: \"system\", y: this.props.system },\n    { x: \"idle\", y: this.props.idle},\n    { x: \"iowait\", y: this.props.iowait },\n    { x: \"irq\", y: this.props.irq },\n    { x: \"softirq\", y: this.props.softirq },\n    { x: \"steat\", y: this.props.steat},\n    { x: \"guest\", y: this.props.guest },\n    { x: \"guest_nice\", y: this.props.guest_nice},\n    \n  ]}/>;\n  }\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport classNames from 'classnames';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\nimport axios from 'axios';\n\nexport default class Header extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t};\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t<nav className='navbar navbar-expand-lg navbar-light header'>\n\t\t\t<a className=\"navbar-brand\" href=\"#\">\n            <h2><b>PlatyPus</b></h2>\n          \t</a>\n\t\t\t<div className=\"nav navbar-nav ml-auto\">\n\t\t\t<h2>\n          \t<Link to=\"/PlatyConsole/Network\" className='nav-item nav-link'>Network</Link>\n            <Link to=\"/PlatyConsole/CPU\" className='nav-item nav-link'>CPU</Link>\n            <Link to=\"/PlatyConsole/Process\" className='nav-item nav-link'>Process</Link>\t \n            <Link to=\"/PlatyConsole/Disk/DiskIOCounters\" className='nav-item nav-link'>DiskIOCounters</Link>\n            <Link to=\"/PlatyConsole/Memory\" className='nav-item nav-link'>Memory</Link>\n            <Link to=\"/PlatyConsole/Disk\" className='nav-item nav-link'>Devices</Link>\t  \t\t\t\n          \t</h2>\n            </div>\n\t\t\t</nav>\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport Header from '../Header';\n\nexport default class LogicalCores extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      logicalCores : 0\n    };\n  }\n\n    componentDidMount() {\n        axios.get('https://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'logicalCores')\n            .then(response => {\n                this.setState({\n                    logicalCores : response.data\n                });\n                console.log(response.data)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div  className = 'jumbotron'>\n            \t <center>\n\t\t\t\t<br/> <br/> <br/> <br/>\n\t\t\t\t<h2>No of Logical Cores</h2>\n        <h3> {this.state.logicalCores} </h3>\n    \t\t</center>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport Header from '../Header';\n\nexport default class PhysicalCores extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      PhysicalCores : 0\n    };\n  }\n\n    componentDidMount() {\n        axios.get('https://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'physicalCores')\n            .then(response => {\n                this.setState({\n                    PhysicalCores : response.data\n                });\n                console.log(response.data)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div  className = 'jumbotron'>\n           \t<center>\n\t\t\t\t<br/> <br/> <br/> <br/>\n\t\t\t\t<h2>No of Physical Cores</h2>\n        <h3> {this.state.PhysicalCores} </h3>\n    \t\t</center>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport classNames from 'classnames';\nimport Error from '../elements/Error';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\nimport axios from 'axios';\nimport Logout from './Logout';\nexport default class Header extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t};\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t<nav className='navbar navbar-expand-lg navbar-light header'>\n\t\t\t<a className=\"navbar-brand\" href=\"#\">\n            <h1><b>PlatyPus</b></h1>\n          \t</a>\n          \t<h2>\n          \t<div className=\"nav navbar-nav ml-auto\">\n          \t<Link to=\"/PlatyTerminal\" className='nav-item nav-link'>Terminal</Link>\n            <Link to=\"/PlatyShare\" className='nav-item nav-link'>PlatyShare</Link>\n            <Link to=\"/PlatyConsole\" className='nav-item nav-link'>PlatyConsole</Link>\t\n            <Link to=\"/PlatyDetect\" className='nav-item nav-link'>PlatyDetect</Link>\t\n            <Link to=\"/PlatyReal\" className='nav-item nav-link'>PlatyReal</Link>\t\n            <Logout />\t\n            </div>\n\t\t\t</h2>\n\t\t\t</nav>\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport PieChart from './PieChart';\nimport LogicalCores from './LogicalCores';\nimport PhysicalCores from './PhysicalCores';\nimport Header from '../Header';\nimport SHeader from '../../SHeader';\n\nexport default class CPU extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      physicalCores : 0, logicalCores : 0, cpuTimes : [], cpuPercent : 0,\n        guest: \"0.0\",\n        guest_nice: \"0.0\",\n        idle: \"19193.18\",\n        iowait: \"305.83\",\n        irq: \"0.0\",\n        nice: \"12.49\",\n        softirq: \"70.36\",\n        steat: \"0.0\",\n        system: \"896.2\",\n        user: \"3530.58\",\n        pguest: \"0.0\",\n        pguest_nice: \"0.0\",\n        pidle: \"19193.18\",\n        piowait: \"305.83\",\n        pirq: \"0.0\",\n        pnice: \"12.49\",\n        psoftirq: \"70.36\",\n        psteat: \"0.0\",\n        psystem: \"896.2\",\n        puser: \"3530.58\"\n    };\n  }\n\n    componentDidMount() {\n        axios.get('https://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'logicalCores')\n            .then(response => {\n                this.setState({\n                    logicalCores : response.data\n                });\n                console.log(response.data)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        axios.get('https://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'physicalCores')\n            .then(response => {\n                this.setState({\n                    physicalCores : response.data\n                });\n                console.log(response.data)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n\n        axios.get('https://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'cpuPercent')\n            .then(response => {\n                this.setState({\n                    cpuPercent : response.data\n                });\n                console.log(response.data)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        axios.get('https://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'cpuTimes')\n            .then(response => {\n                const dat = response.data;\n                this.setState({\n                     guest: dat[\"guest\"],\n                    guest_nice: dat[\"guest_nice\"],\n                    idle: dat[\"idle\"],\n                    iowait: dat[\"iowait\"],\n                    irq: dat[\"irq\"],\n                    nice: dat[\"nice\"],\n                    softirq: dat[\"softirq\"],\n                    steat: dat[\"steat\"],\n                    system: dat[\"system\"],\n                    user: dat[\"user\"]\n                }); \n                console.log(dat)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n\n        axios.get('https://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'cpuTimesPercent')\n            .then(response => {\n                const dat = response.data;\n                this.setState({\n                    pguest: dat[\"guest\"],\n                    pguest_nice: dat[\"guest_nice\"],\n                    pidle: dat[\"idle\"],\n                    piowait: dat[\"iowait\"],\n                    pirq: dat[\"irq\"],\n                    pnice: dat[\"nice\"],\n                    psoftirq: dat[\"softirq\"],\n                    psteat: dat[\"steat\"],\n                    psystem: dat[\"system\"],\n                    puser: dat[\"user\"]\n                }); \n                console.log(dat)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n    }\n\n\trender() {\n        if(localStorage.getItem('session') != \"start\"){\n            return <Redirect push to = \"/Login\" />;\n          }\n\t\treturn (\n\t\t\t<div>\n            <SHeader/>\n            <Header/>\n\t\t\t\t<center>\n\t\t\t\t<br/> <br/> <br/> <br/>\n\t\t\t\t\n                <LogicalCores/>\n                <PhysicalCores/>\n\n                <div  className = 'jumbotron'>\n                <h2>CPU Utilization Percentage</h2>\n                <h3> {this.state.cpuPercent}</h3>\n                </div>\n\n                <div  className = 'jumbotron'>\n                <h2>CPU times</h2>\n                <h3> Guest : {this.state.guest}   </h3>\n                <h3> Guest_nice : {this.state.guest_nice}   </h3>\n                <h3> Idle : {this.state.idle} </h3>\n                <h3> Iowait : {this.state.iowait} </h3>\n                <h3> IRQ : {this.state.irq} </h3>\n                <h3> Nice : {this.state.nice} </h3>\n                <h3> SoftIRQ : {this.state.softirq} </h3>\n                <h3> Steat : {this.state.steat} </h3>\n                <h3> System : {this.state.system} </h3>\n                <h3> User : {this.state.user} </h3>\n                </div>\n\n                <div  className = 'jumbotron'>\n                <h2>CPU times percentage</h2>\n                <h3> Guest : {this.state.pguest}   </h3>\n                <h3> Guest_nice : {this.state.pguest_nice}   </h3>\n                <h3> Idle : {this.state.pidle} </h3>\n                <h3> Iowait : {this.state.piowait} </h3>\n                <h3> IRQ : {this.state.pirq} </h3>\n                <h3> Nice : {this.state.pnice} </h3>\n                <h3> SoftIRQ : {this.state.psoftirq} </h3>\n                <h3> Steat : {this.state.psteat} </h3>\n                <h3> System : {this.state.psystem} </h3>\n                <h3> User : {this.state.puser} </h3>\n                </div>\n\n                <PieChart guest = {this.state.pguest} guest_nice = {this.state.pguest_nice} \n                idlt = {this.state.pidle} iowait = {this.state.piowait} irq = {this.state.pirq}\n                nice = {this.state.pnice} softirq = {this.state.psoftirq} steat = {this.state.psteat}\n                system = {this.state.psystem} user = {this.state.user}\n                />\n\n\n        \t</center>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport classNames from 'classnames';\n// import { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\nimport axios from 'axios';\n\nexport default class PHeader extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t};\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t<nav className='navbar navbar-expand-lg navbar-light header'>\n\t\t\t<a className=\"navbar-brand\" href=\"#\">\n            <h2><b>Network</b></h2>\n          \t</a>\n\t\t\t<div className=\"nav navbar-nav ml-auto\">\n\t\t\t<h2>\n          \t<Link to=\"/PlatyConsole/Network/AddressFamilies\" className='nav-item nav-link'>AddressFamilies</Link>\n            <Link to=\"/PlatyConsole/Network/AddressForAllInterfaces\" className='nav-item nav-link'>AddressForAllInterfaces</Link>\n            <Link to=\"/PlatyConsole/Network/AllNICs\" className='nav-item nav-link'>All NICs</Link>\t \n            <Link to=\"/PlatyConsole/Network/Gateways\" className='nav-item nav-link'>Gateways</Link>  \t\t\t\n          \t</h2>\n            </div>\n\t\t\t</nav>\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport Header from '../Header';\nimport PHeader from './PHeader';\nimport SHeader from '../../SHeader';\n\nexport default class AddressFamilies extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n    };\n  }\n\trender() {\n\t\treturn (\n\t\t\t<div className = 'jumbotron'>\n                <SHeader/>\n                <Header/>\n                <PHeader/>\n\t\t\t\t<center>\n\t\t\t\t<br/> <br/> <br/> <br/>\n\t\t\t     <h2>Address Families Numbers</h2>\n                 <h4>\n                 \"AF_APPLETALK : 5\" <br/>\n        \"AF_ASH : 18\"<br/>\n        \"AF_ATMPVC : 8\"<br/>\n        \"AF_ATMSVC : 20\"<br/>\n        \"AF_AX25 : 3\"<br/>\n        \"AF_BLUETOOTH : 31\"<br/>\n        \"AF_BRIDGE : 7\"<br/>\n        \"AF_DECnet : 12\"<br/>\n        \"AF_ECONET : 19\"<br/>\n        \"AF_FILE : 1\"<br/>\n        \"AF_INET : 2\"<br/>\n        \"AF_INET6 : 10\"<br/>\n        \"AF_IPX : 4\"<br/>\n        \"AF_IRDA : 23\"<br/>\n        \"AF_ISDN : 34\"<br/>\n        \"AF_KEY : 15\"<br/>\n        \"AF_LINK : 17\"<br/>\n        \"AF_NETBEUI : 13\"<br/>\n        \"AF_NETLINK : 16\"<br/>\n        \"AF_NETROM : 6\"<br/>\n        \"AF_PACKET : 17\"<br/>\n        \"AF_PPPOX : 24\"<br/>\n        \"AF_ROSE : 11\"<br/>\n        \"AF_ROUTE : 16\"<br/>\n        \"AF_SECURITY : 14\"<br/>\n        \"AF_SNA : 22\"<br/>\n        \"AF_UNIX : 1\"<br/>\n        \"AF_UNSPEC : 0\"<br/>\n        \"AF_WANPIPE : 25\"<br/>\n        \"AF_X25 : 9\"<br/>\n                 </h4>\n        \t</center>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport Header from '../Header';\nimport PHeader from './PHeader';\nimport SHeader from '../../SHeader';\n\nconst SList = props => (\n    <tr>\n        <td>{props.data}</td></tr>\n)\n\nexport default class AllNICs extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      allNICs : []\n    };\n  }\n\n    componentDidMount() {\n        axios.get('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'allNICs')\n            .then(response => {\n                this.setState({\n                    allNICs : response.data\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    troublesListf() {\n       // filter(book => book.shelf === shelf)\n        return this.state.allNICs.map(\n            function(data, i) {\n                return <SList data = {data} key={i} />;\n            }\n        )\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div  className = 'jumbotron'>\n            <SHeader/>\n            <Header/>\n            <PHeader/>\n            <center><h2>NICs</h2>\n\t\t\t <h2>{this.troublesListf()} </h2>\n             </center>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from '../Header';\nimport PHeader from './PHeader';\nimport SHeader from '../../SHeader';\n\nconst SList = props => (\n    <div>\n    <div className=\"card\">\n                <div className=\"card-body\">\n                  <h3 className=\"card-title\"><b>{props.data.interface}</b></h3>\n                  <div className=\"card-text\">{props.data.address.map(u => (<p>{u}</p>))}</div>\n                \n                </div>\n              </div>\n   \n    </div>\n\n)\n\nexport default class AddressForAllInterfaces extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      physicalCores : 0, logicalCores : 0, cpuTimes : [], cpuPercent : 0,\n      interfaces : [],\n      addrs : [],\n      a : []\n    };\n  }\n\n    componentDidMount() {\n        \n        axios.get('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'interfaces')\n            .then(response => {\n                this.setState({\n                    interfaces : response.data\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        axios.get('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'addressForAllInterfaces')\n            .then(response => {\n                this.setState({\n                    addrs : response.data\n                });\n                console.log(\"*********\");\n                console.log(this.state.addrs);\n                console.log(\"*********\");\n\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    troublesListf() {\n       // filter(book => book.shelf === shelf)\n        return this.state.addrs.map(\n            function(data, i) {\n                return <SList data = {data} key={i} />;\n            }\n        )\n    }\n    troublesListf1() {\n       // filter(book => book.shelf === shelf)\n        return this.state.interfaces.map(\n            function(data, i) {\n                return <SList data = {data} key={i} />;\n            }\n        )\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div  className = 'jumbotron'>\n            <SHeader/>\n            <Header/>\n            <PHeader/>\n            <h2>\n            <center>\n            {this.troublesListf()}\n                 </center>\n                </h2>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport Header from '../Header';\nimport PHeader from './PHeader';\nimport SHeader from '../../SHeader';\n\nconst SList = props => (\n    <tr>\n                 <td>{props.data.addressFamily}</td>\n                  <td>{props.data.ip}</td>\n                  <td>{props.data.name}</td>\n    </tr> \n)\n\nexport default class Gateways extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      allNICs : []\n    };\n  }\n\n    componentDidMount() {\n        axios.get('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'gateways')\n            .then(response => {\n                this.setState({\n                    allNICs : response.data\n                });\n                console.log(\"*********\");\n                console.log(response.data)\n                console.log(\"*********\");\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    troublesListf() {\n       // filter(book => book.shelf === shelf)\n        return this.state.allNICs.map(\n            function(data, i) {\n                return <SList data = {data} key={i} />;\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div  className = 'jumbotron'>\n            <SHeader/>\n            <Header/>\n            <PHeader/>\n            <center><h1>Gateways</h1>\n            </center>\n                <h2>\n              <table className = 'table table-striped' style={{marginTop: 20}}>\n                      <thead>\n                          <tr>\n                              <th> AddressFamily </th>\n                              <th> IP </th>\n                              <th> Name </th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                          {this.troublesListf()}\n                      </tbody>\n              </table>\n              </h2>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport AddressFamilies from './AddressFamilies';\nimport AllNICs from './AllNICs';\nimport AddressForAllInterfaces from './AddressForAllInterfaces';\nimport Gateways from './Gateways';\nimport Header from '../Header';\nimport PHeader from './PHeader';\nimport SHeader from '../../SHeader';\n\nexport default class Network extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n     };\n  }\n    componentDidMount() {   \n    }\n\trender() {\n     if(localStorage.getItem('session') != \"start\"){\n        return <Redirect push to = \"/Login\" />;\n      }\n\t\treturn (\n\t\t\t<div>\n                <SHeader/>\n                <Header/>\n                <PHeader/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport Header from '../Header';\nimport SHeader from '../../SHeader';\nconst SList = props => (\n  <tr>\n                 <td>{props.data.name}</td>\n                  <td>{props.data.pid}</td>\n    </tr>\n)\n\nexport default class AllProcesses extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      allProcesses : []\n    };\n  }\n\n    componentDidMount() {\n        axios.get('http://localhost:5000/allProcesses')\n            .then(response => {\n                this.setState({\n                    allProcesses : response.data\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    troublesListf() {\n       // filter(book => book.shelf === shelf)\n        return this.state.allProcesses.map(\n            function(data, i) {\n                return <SList data = {data} key={i} />;\n            }\n        )\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n      <SHeader/>\n      <Header/>\n            <center><h1>All Processes</h1></center>\n            <h2>\n           <table className = 'table table-striped' style={{marginTop: 20}}>\n                      <thead>\n                          <tr>\n                              <th> Name </th>\n                              <th> PID </th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                          {this.troublesListf()}\n                      </tbody>\n              </table>\n              </h2>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from '../Header';\nimport SHeader from '../../SHeader';\n\nconst SList = props => (\n   <tr>\n                  <td>{props.data.name}</td>\n                  <td>{props.data.pid}</td>\n                  <td>{props.data.username}</td>\n                  <td>{props.data.vms}</td>  \n    </tr>\n)\n\nexport default class AllProcesses extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      allProcesses : []\n    };\n  }\n\n    componentDidMount() {\n        axios.get('http://localhost:5000/getListOfProcessSortedByMemory')\n            .then(response => {\n                this.setState({\n                    allProcesses : response.data\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    troublesListf() {\n       // filter(book => book.shelf === shelf)\n        return this.state.allProcesses.map(\n            function(data, i) {\n                return <SList data = {data} key={i} />;\n            }\n        )\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n          <SHeader/>\n            <Header/>\n            <h2>\n           <table className = 'table table-striped' style={{marginTop: 20}}>\n                      <thead>\n                          <tr>\n                              <th> Name </th>\n                              <th> PID </th>\n                              <th> User </th>\n                              <th> CPU </th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                          {this.troublesListf()}\n                      </tbody>\n                  </table>\n                </h2>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport AllProcess from './AllProcess';\nimport AllProcessMemory from './AllProcessMemory';\nimport Header from '../Header';\nimport SHeader from '../../SHeader';\nexport default class Process extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n     };\n  }\n    componentDidMount() {   \n    }\n\trender() {\n\t\treturn (\n\t\t\t<div> \n        <AllProcessMemory/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\nimport axios from 'axios';\nimport CPU from './CPU/CPU';\nimport Network from './Network/Network';\nimport Process from './Process/Process';\nimport Header from './Header';\nexport default class PlatyDetect extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n    };\n  }\n\n\trender() {\n      if(localStorage.getItem('session') != \"start\"){\n        return <Redirect push to = \"/Login\" />;\n      }\n\t\treturn (\n\t\t\t<div>\n      <div>\n      <nav className='navbar navbar-expand-lg navbar-light header'>\n      <a className=\"navbar-brand\" href=\"#\">\n            <h1><b>PlatyPus</b></h1>\n            </a>\n            <h2>\n            <div className=\"nav navbar-nav ml-auto\">\n            <Link to=\"/PlatyTerminal\" className='nav-item nav-link'>Terminal</Link>\n            <Link to=\"/PlatyShare\" className='nav-item nav-link'>PlatyShare</Link>\n            <Link to=\"/PlatyConsole\" className='nav-item nav-link'>PlatyConsole</Link>  \n            <Link to=\"/PlatyDetect\" className='nav-item nav-link'>PlatyDetect</Link>  \n            <Link to=\"/PlatyReal\" className='nav-item nav-link'>PlatyReal</Link>  \n              \n            </div>\n      </h2>\n      </nav>      \n      </div>\n      <Header/>\n\t\t\t\t<center>\n\t\t\t\t<br/> <br/> <br/> <br/>\n\t\t\t\t<h1  className = 'jumbotron'>PlatyConsole</h1>\n    \t\t\t</center>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\nimport axios from 'axios';\nimport Header from '../Header';\n\nconst SList = props => (\n    <tr>\n        <td><center>{props.data}</center></td>\n    </tr>\n)\n\nexport default class PlatyReal extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      devices : [],\n      data: [],\n    };\n  }\n\n    componentDidMount() {\n        axios.get('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'pendrives')\n            .then(response => {\n                this.setState({\n                    devices : response.data\n                });\n\t\talert('hello')\n                console.log(response.data)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n\tconsole.log('in submit')\n\taxios.get('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'readfile')\n            .then(response => {\n                 this.setState({\n\t\t\tdata: response.data\t\n\t\t})          \n\t     })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n    \n    }\n\t\n\n    devicesList() {\n        return this.state.devices.map(function(data, i) {\n            return <SList data = {data} key={i} />;\n        })\n    }\n\t\n\n    acpiList() {\n        return this.state.data.map(function(data, i) {\n            return <SList data = {data} key={i} />;\n        })\n    }\n\n\trender() {\n      if(localStorage.getItem('session') != \"start\"){\n        return <Redirect push to = \"/Login\" />;\n      }\n\t\treturn (\n\t\t\t <div className = 'container'>  \n                <Header/>\n\t\t\t \t<center>                 \n                    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n                    </nav>\n                    <div>\n                        <h2>All Devices</h2>\n                        <table className = 'table table-striped' style={{marginTop: 20}}>\n                            <tbody>\n                                {this.devicesList()}\n                            </tbody>\n                        </table>\n\t\t\t<form onSubmit = {this.onSubmit}>\n            <button type=\"submit\" className=\"btn btn-primary\">Check pheripheral devices actions</button>\n          </form>\n\t\t                <h3> Actions : {this.acpiList()}   </h3>\t\n                    </div>\n                </center>\n              </div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from '../Header';\nimport SHeader from '../../SHeader';\n\nconst SList = props => (\n   <tr>\n                  <td>{props.data.total}</td>\n                  <td>{props.data.used}</td>\n                  <td>{props.data.free}</td>\n                  <td>{props.data.percent}</td>  \n    </tr>\n)\n\nexport default class Space extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      allProcesses : []\n    };\n  }\n\n    componentDidMount() {\n        const data = {'device' : this.props.location.state.device}\n        axios.post('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'disk_usage', data)\n            .then(response => {\n                this.setState({\n                    allProcesses : response.data\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    troublesListf() {\n       return this.state.allProcesses.map(\n            function(data, i) {\n                return <SList data = {data} key={i} />;\n            }\n        )\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>  \n      <SHeader />\n      <Header />\n      <h2>\n         <Link  \n                  to={{\n                  pathname: '/PlatyConsole/Disk',\n                 }}\n           className='nav-item nav-link'>Back</Link>\n         <table className = 'table table-striped' style={{marginTop: 20}}>\n                      <thead>\n                          <tr>\n                              <th> Total </th>\n                              <th> Used </th>\n                              <th> Free </th>\n                              <th> Percent </th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                          {this.troublesListf()}\n                      </tbody>\n                  </table>\n                  </h2>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from '../Header';\nimport SHeader from '../../SHeader';\n\nconst SList = props => (\n   <tr>\n                  <td>{props.data.device}</td>\n                  <td>{props.data.mountpoint}</td>\n                  <td>{props.data.fstype}</td>\n                  <td>{props.data.opts}</td>  \n                  <td><Link  \n                       to={{\n                  pathname: '/PlatyConsole/Disk/Space',\n                  state: {\n                    device : props.data.mountpoint\n                  }}}\n           className='nav-item nav-link'>Space</Link></td>\n    </tr>\n)\n\nexport default class Partitions extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      allProcesses : []\n    };\n  }\n\n    componentDidMount() {\n        axios.get('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'partitions')\n            .then(response => {\n                this.setState({\n                    allProcesses : response.data\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    troublesListf() {\n       // filter(book => book.shelf === shelf)\n        return this.state.allProcesses.map(\n            function(data, i) {\n                return <SList data = {data} key={i} />;\n            }\n        )\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n           <table className = 'table table-striped' style={{marginTop: 20}}>\n                      <h2>\n                      <thead>\n                          <tr>\n                              <th> Device </th>\n                              <th> Mount Point </th>\n                              <th> File System </th>\n                              <th> Opts </th>\n                              <th> Space </th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                          {this.troublesListf()}\n                      </tbody>\n                      </h2>\n          </table>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport Partitions from './Partitions';\nimport Header from '../Header';\n\nimport SHeader from '../../SHeader';\n\nexport default class Space extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n     };\n  }\n    componentDidMount() {   \n    }\n\trender() {\n     if(localStorage.getItem('session') != \"start\"){\n        return <Redirect push to = \"/Login\" />;\n      }\n\t\treturn (\n\t\t\t<div> \n      <SHeader/>\n        <Header/>\n          <Partitions />\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from '../Header';\nimport SHeader from '../../SHeader';\n\nconst SList = props => (\n   <tr>\n                  <td>{props.data.type}</td>\n                  <td>{props.data.total}</td>\n                  <td>{props.data.used}</td>\n                  <td>{props.data.free}</td>\n                  <td>{props.data.percent}</td>\n                  <td>{props.data.sin}</td>\n                  <td>{props.data.sout}</td>\n    </tr>\n)\n\nexport default class Memory extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      allProcesses : []\n    };\n  }\n\n    componentDidMount() {\n        axios.get('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'memory')\n            .then(response => {\n                this.setState({\n                    allProcesses : response.data\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    troublesListf() {\n       // filter(book => book.shelf === shelf)\n        return this.state.allProcesses.map(\n            function(data, i) {\n                return <SList data = {data} key={i} />;\n            }\n        )\n    }\n\n\trender() {\n     if(localStorage.getItem('session') != \"start\"){\n        return <Redirect push to = \"/Login\" />;\n      }\n\t\treturn (\n\t\t\t<div>\n      <SHeader/>\n        <Header/>\n        <h2>\n           <table className = 'table table-striped' style={{marginTop: 20}}>\n                      <thead>\n                          <tr>\n                              <th> Type </th>\n                              <th> Total </th>\n                              <th> Used </th>\n                              <th> Free </th>\n                              <th> Percent </th>             \n                              <th> Sin </th>\n                              <th> Sout </th>\n                              \n                          </tr>\n                      </thead>\n                      <tbody>\n                          {this.troublesListf()}\n                      </tbody>\n                  </table>\n        </h2>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport classNames from 'classnames';\n//import { UserRegistration, UsernameValidation } from '../services/RegistrationService';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../../MessageBundle';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from '../Header';\nimport SHeader from '../../SHeader';\n\nconst SList = props => (\n   <tr>\n                  <td>{props.data.read_count}</td>\n                  <td>{props.data.write_count}</td>\n                  <td>{props.data.read_bytes}</td>\n                  <td>{props.data.write_bytes}</td>\n                  <td>{props.data.read_time}</td>  \n                  <td>{props.data.write_time}</td>  \n                  <td>{props.data.read_merged_count}</td>  \n                  <td>{props.data.write_merged_count}</td>  \n                  <td>{props.data.busy_time}</td>  \n    </tr>\n)\n\nexport default class DiskIOCounters extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      allProcesses : []\n    };\n  }\n\n    componentDidMount() {\n        axios.get('http://' + localStorage.getItem('secret_key') + '.ngrok.io/' + 'DiskIOCounters')\n            .then(response => {\n                this.setState({\n                    allProcesses : response.data\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    troublesListf() {\n       // filter(book => book.shelf === shelf)\n        return this.state.allProcesses.map(\n            function(data, i) {\n                return <SList data = {data} key={i} />;\n            }\n        )\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n            <SHeader/>\n           <Header/>\n           <h2>\n           <table className = 'table table-striped' style={{marginTop: 20}}>\n                      <thead>\n                          <tr>\n                            <th>Read Count  </th>\n                              <th>Write Count </th>\n                              <th>Read Bytes </th>\n                              <th>Write Bytes </th>\n                              <th>Read Time </th>\n                              <th>Write Time </th>\n                              <th>Read Merged Count </th>\n                              <th>Write Merged Count </th>\n                              <th>Busy Time </th>\n                              \n                          </tr>\n                      </thead>\n                      <tbody>\n                          {this.troublesListf()}\n                      </tbody>\n                  </table>\n            </h2>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport classNames from 'classnames';\nimport Error from '../elements/Error';\nimport { REGISTRATION_FIELDS, REGISTRATION_MESSAGE, COMMON_FIELDS, ERROR_IN_REGISTRATION } from '../MessageBundle';\n// import LoggedIn from './LoggedIn';\nimport Header from './Header';\n\nexport default class UserSignIn extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tuser_name : \"\",\n\t\t\tpassword : \"\",\n\t\t\tsecret_key : \"\",\n\t\t\terror : false,\n\t\t\tloginSuccess : false,\n\t\t\terrorMessage : \"\"\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t}\n\n\thandleChange(event) {\n\t\tconst {name, value} = event.target\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t})\n\t}\n\n\tonSubmit = async e => {\n\t\tconst data = {\n\t\t\tuser_name : this.state.user_name,\n\t\t\tpassword : this.state.password,\n\t\t\tsecret_key : this.state.secret_key\n\t\t};\n\t\tvar res;\n\t\tawait axios.post('https://' + this.state.secret_key + '.ngrok.io/' + 'isValid', data)\n\t\t.then(response => {\n\t\t\tconsole.log(response);\n\t\t\tres = response.status;\n\t\t\tif(response.data.status == 'Valid'){\n\t\t\t\tthis.setState({\n\t\t\t\t\tloginSuccess : true\n\t\t\t\t});\n\t\t\t}\n\t\t\telse{\n\t\t\t\tconsole.log(\"Invalid user_name\");\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error.response);\n\t\t\tthis.setState({\n\t\t\t\tpassword: \"\"\n\t\t\t});\n\t\t});\n\t}\n\n\tcomponentWillMount() {\n\t\tlocalStorage.setItem('session_start', null);\t\n\t}\n\n\trender() {\n\n\t\tconst { loginSuccess, error } = this.state;\n\t\tif (this.state.loginSuccess == true) {\n\t\t\tlocalStorage.setItem('session', \"start\");\n\t\t\tlocalStorage.setItem('user_name', this.state.user_name);\n\t\t\tlocalStorage.setItem('secret_key', this.state.secret_key);\n\t\t\t\n\t\t\tconsole.log(\"%%%%%%\");\n\t\t\tconsole.log(this.state.user_name);\n\t\t\tconsole.log(\"%%%%%%\");\n\t\t\t\n\t\t\treturn <Redirect push to  = {{ \n\t\t\t\t\tpathname : '/PlatyTerminal',\n            \t\tstate : { user_name : this.state.user_name}\n            }}\n\t\t\t/>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Header />\n \t\t\t<center>\n\t\t\t\t<div className=\"jumbotron\">\n\t\t\t\t\t<h2>USER <span className=\"change-color\">LOGIN</span> </h2>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<form onSubmit = {this.handleSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-2\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"user_name\">Username:</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-10\">\n\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={this.state.user_name} name=\"user_name\" placeholder=\"username\" id=\"username\" onChange={this.handleChange}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-2\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"password\">Password:</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-10\">\n\t\t\t\t\t\t\t\t<input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" value={this.state.password} placeholder=\"Password\" onChange={this.handleChange} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-2\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"secret_key\">Secret Key:</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-10\">\n\t\t\t\t\t\t\t\t<input type=\"password\" className=\"form-control\" name=\"secret_key\" id=\"secret_key\" value={this.state.secret_key} placeholder=\"Secret Key\" onChange={this.handleChange} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<h4><span className=\"errorMessage\">{this.state.errorMessage}</span></h4>\n\n\t\t\t\t\t\t<br/><br/>\n\t\t\t\t\t\t<center> <button type=\"button\" onClick={this.onSubmit} className=\"btn btn-primary\"><h4>LOGIN</h4></button><br /><br />\n\t\t\t\t\t\t<h4>Not a user ?<Link to = \"/UserSignUp\" className=\"link\"> SignUp </Link></h4></center>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t)\n\n\t}\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch, Link } from \"react-router-dom\";\n\nimport Terminal from 'terminal-in-react';\nimport axios from 'axios';\nimport PlatyTerminal from './PlatyTerminal/PlatyTerminal';\nimport PlatyRun from './PlatyTerminal/PlatyRun';\nimport PieChart from './PieChart';\nimport PlatyShare from './PlatyShare/PlatyShare';\nimport PlatyDetect from './PlatyDetect/PlatyDetect';\nimport PlatyConsole from './PlatyConsole/PlatyConsole';\nimport PlatyReal from './PlatyReal/PlatyReal';\nimport Network from './PlatyConsole/Network/Network';\nimport CPU from './PlatyConsole/CPU/CPU';\nimport Process from './PlatyConsole/Process/Process';\nimport Space from './PlatyConsole/Disk/Space';\nimport Disk from './PlatyConsole/Disk/Disk';\nimport Memory from './PlatyConsole/Memory/Memory';\nimport DiskIOCounters from './PlatyConsole/Disk/DiskIOCounters';\nimport Header from './Header'; \nimport AddressFamilies from './PlatyConsole/Network/AddressFamilies';\nimport AddressForAllInterfaces from './PlatyConsole/Network/AddressForAllInterfaces';\nimport AllNICs from './PlatyConsole/Network/AllNICs';\nimport Gateways from './PlatyConsole/Network/Gateways';\nimport Login from './Login';\n\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\t\n\t\t\t\t<Router>\n\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/PlatyTerminal\" component={PlatyTerminal} />\n\t\t\t\t\t\t<Route exact path=\"/PlatyRun\" component={PlatyRun} />\n\t\t\t\t\t\t<Route exact path = \"/PlatyShare\" component = {PlatyShare} />\n\t\t\t\t\t\t<Route exact path = \"/PlatyDetect\" component = {PlatyDetect} />\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole\" component = {PlatyConsole} />\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/Network\" component = {Network} />\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/Network/AddressFamilies\" component = {AddressFamilies} />\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/Network/AddressForAllInterfaces\" component = {AddressForAllInterfaces} />\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/Network/AllNICs\" component = {AllNICs} />\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/Network/Gateways\" component = {Gateways} />\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/CPU\" component = {CPU} />\t\t\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/Process\" component = {Process} />\t\t\t\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/Memory\" component = {Memory} />\t\t\t\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/Disk\" component = {Disk} />\t\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/Disk/Space\" component = {Space} />\t\n\t\t\t\t\t\t<Route exact path = \"/PlatyConsole/Disk/DiskIOCounters\" component = {DiskIOCounters} />\t\n\t\t\t\t\t\t<Route exact path = \"/PlatyReal\" component = {PlatyReal} />\t\t\n\t\t\t\t\t\t<Route exact path = \"/Login\" component = {Login}/>\n\t\t\t\t\t\t<Redirect from=\"/\" to=\"/Login\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\t\n\t\t\t\t<link\n\t\t\t\t  rel=\"stylesheet\"\n\t\t\t\t  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n\t\t\t\t  crossOrigin=\"anonymous\"\n\t\t\t\t/>\n\t\t\t</div>\t\n\t\t);\n\t}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}